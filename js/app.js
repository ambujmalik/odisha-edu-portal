// Odisha Education Management System - Enhanced with Cultural Elements
class OdishaEducationPortal {
    constructor() {
        this.currentUser = null;
        this.currentModule = 'dashboard';
        this.realTimeEnabled = true;
        this.syncInterval = null;
        this.language = 'odia'; // Default to Odia for local users

        // Enhanced credentials with Odisha cultural context
        this.credentials = {
            student: {
                username: "student001",
                password: "student123",
                name: "‡¨∞‡¨¨‡¨ø ‡¨ï‡≠Å‡¨Æ‡¨æ‡¨∞ ‡¨™‡¨ü‡≠á‡¨≤", // Ravi Kumar Patel in Odia
                nameEn: "Ravi Kumar Patel",
                role: "Student",
                roleOdia: "‡¨õ‡¨æ‡¨§‡≠ç‡¨∞",
                profilePicture: "üë®‚Äçüéì",
                school: "Government High School, Cuttack",
                schoolOdia: "‡¨∏‡¨∞‡¨ï‡¨æ‡¨∞‡≠Ä ‡¨â‡¨ö‡≠ç‡¨ö ‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü, ‡¨ï‡¨ü‡¨ï",
                class: "Class X",
                rollNo: "2024001",
                data: this.generateStudentData()
            },
            parent: {
                username: "parent001", 
                password: "parent123",
                name: "‡¨∞‡¨Æ‡≠á‡¨∂ ‡¨™‡¨ü‡≠á‡¨≤",
                nameEn: "Ramesh Patel",
                role: "Parent",
                roleOdia: "‡¨Ö‡¨≠‡¨ø‡¨≠‡¨æ‡¨¨‡¨ï",
                profilePicture: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
                children: ["Ravi Kumar Patel", "Priya Patel"],
                data: this.generateParentData()
            },
            teacher: {
                username: "teacher001",
                password: "teacher123", 
                name: "‡¨°‡¨ï‡≠ç‡¨ü‡¨∞ ‡¨™‡≠ç‡¨∞‡¨ï‡¨æ‡¨∂ ‡¨Æ‡¨ø‡¨∂‡≠ç‡¨∞",
                nameEn: "Dr. Prakash Mishra",
                role: "Teacher",
                roleOdia: "‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï",
                profilePicture: "üë©‚Äçüè´",
                subject: "Mathematics & Science",
                subjectOdia: "‡¨ó‡¨£‡¨ø‡¨§ ‡¨ì ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®",
                experience: "15 years",
                school: "Government High School, Bhubaneswar",
                data: this.generateTeacherData()
            },
            headmaster: {
                username: "head001",
                password: "head123",
                name: "‡¨°‡¨ï‡≠ç‡¨ü‡¨∞ ‡¨¨‡¨ø‡¨ú‡≠ü ‡¨Æ‡¨π‡¨æ‡¨™‡¨æ‡¨§‡≠ç‡¨∞",
                nameEn: "Dr. Bijay Mohapatra", 
                role: "Headmaster",
                roleOdia: "‡¨™‡≠ç‡¨∞‡¨ß‡¨æ‡¨® ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï",
                profilePicture: "üë®‚Äçüíº",
                school: "Government Model School, Puri",
                students: 245,
                teachers: 18,
                data: this.generateHeadmasterData()
            },
            block_officer: {
                username: "block001",
                password: "block123",
                name: "‡¨∂‡≠ç‡¨∞‡≠Ä ‡¨∏‡≠Å‡¨∞‡≠á‡¨∂ ‡¨Æ‡¨π‡¨æ‡¨®‡≠ç‡¨§‡¨ø",
                nameEn: "Mr. Suresh Mohanty",
                role: "Block Education Officer", 
                roleOdia: "‡¨¨‡≠ç‡¨≤‡¨ï ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨æ ‡¨ï‡¨∞‡≠ç‡¨Æ‡¨ö‡¨æ‡¨∞‡≠Ä",
                profilePicture: "üèõÔ∏è",
                block: "Khordha Block",
                blockOdia: "‡¨ñ‡≠ã‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ ‡¨¨‡≠ç‡¨≤‡¨ï",
                schools: 23,
                data: this.generateBlockOfficerData()
            },
            district_officer: {
                username: "district001",
                password: "district123",
                name: "‡¨°‡¨ï‡≠ç‡¨ü‡¨∞ ‡¨∞‡¨æ‡¨ú‡≠á‡¨∂ ‡¨ï‡≠Å‡¨Æ‡¨æ‡¨∞",
                nameEn: "Dr. Rajesh Kumar",
                role: "District Education Officer",
                roleOdia: "‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨æ ‡¨ï‡¨∞‡≠ç‡¨Æ‡¨ö‡¨æ‡¨∞‡≠Ä", 
                profilePicture: "üè¢",
                district: "Khordha District",
                districtOdia: "‡¨ñ‡≠ã‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ ‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ",
                schools: 156,
                students: 5247,
                teachers: 342,
                data: this.generateDistrictOfficerData()
            }
        };

        // Enhanced system status with Odisha context
        this.systemStatus = {
            isOnline: true,
            lastSync: new Date(),
            activeUsers: 1247 + Math.floor(Math.random() * 100),
            serverLoad: Math.random() * 50 + 25,
            databaseConnections: Math.floor(Math.random() * 50) + 150,
            districts: 8,
            blocks: 47,
            schools: 156,
            students: 5247,
            teachers: 342
        };

        this.initializeApp();
    }

    initializeApp() {
        document.addEventListener('DOMContentLoaded', () => {
            this.setupEventListeners();
            this.showLoadingScreen();
            this.updateRealTimeStats();
            this.startRealTimeSync();
        });
    }

    setupEventListeners() {
        const loginForm = document.getElementById('loginForm');
        if (loginForm) {
            loginForm.addEventListener('submit', (e) => this.handleLogin(e));
        }

        const roleSelect = document.getElementById('userRole');
        if (roleSelect) {
            roleSelect.addEventListener('change', (e) => this.handleRoleSelection(e));
        }

        // Language toggle
        document.querySelectorAll('.lang-btn').forEach(btn => {
            btn.addEventListener('click', (e) => this.toggleLanguage(e));
        });
    }

    showLoadingScreen() {
        const loadingScreen = document.getElementById('loadingScreen');
        const progressBar = document.getElementById('progressBar');
        const loadingText = document.getElementById('loadingText');

        if (loadingScreen) {
            loadingScreen.classList.remove('hidden');

            const steps = [
                'Connecting to Odisha Education Database...',
                '‡¨ì‡¨°‡¨º‡¨ø‡¨∂‡¨æ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨æ ‡¨§‡¨•‡≠ç‡≠ü‡¨ï‡≠ã‡¨∂ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨∏‡¨Ç‡¨Ø‡≠ã‡¨ó...',
                'Loading 156+ Schools from 8 Districts...',
                '156+ ‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨≤‡≠ã‡¨°‡¨º ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
                'Loading 5,000+ Student Records...',
                '5,000+ ‡¨õ‡¨æ‡¨§‡≠ç‡¨∞ ‡¨§‡¨•‡≠ç‡≠ü ‡¨≤‡≠ã‡¨°‡¨º ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
                'Loading 750+ Teacher Profiles...',
                '750+ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï ‡¨§‡¨•‡≠ç‡≠ü ‡¨≤‡≠ã‡¨°‡¨º ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
                'Initializing Real-time Sync...',
                '‡¨™‡≠ç‡¨∞‡¨ï‡≠É‡¨§ ‡¨∏‡¨Æ‡≠ü ‡¨§‡¨•‡≠ç‡≠ü ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§ ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
                'Ready! ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§!'
            ];

            let step = 0;
            const interval = setInterval(() => {
                if (step < steps.length) {
                    loadingText.textContent = steps[step];
                    step++;
                } else {
                    clearInterval(interval);
                    setTimeout(() => this.hideLoadingScreen(), 500);
                }
            }, 600);
        }
    }

    hideLoadingScreen() {
        const loadingScreen = document.getElementById('loadingScreen');
        if (loadingScreen) {
            loadingScreen.style.opacity = '0';
            setTimeout(() => {
                loadingScreen.classList.add('hidden');
                loadingScreen.style.opacity = '1';
            }, 300);
        }
    }

    handleRoleSelection(e) {
        const role = e.target.value;
        const usernameField = document.getElementById('username');
        const passwordField = document.getElementById('password');

        if (role && this.credentials[role]) {
            usernameField.value = this.credentials[role].username;
            passwordField.value = this.credentials[role].password;
        }
    }

    async handleLogin(e) {
        e.preventDefault();
        const role = document.getElementById('userRole').value;
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;
        const submitBtn = e.target.querySelector('button[type="submit"]');

        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = 'üîÑ ‡¨∏‡¨Ç‡¨Ø‡≠ã‡¨ó ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø... Connecting...';
        submitBtn.disabled = true;

        await new Promise(resolve => setTimeout(resolve, 2000));

        const credentials = this.credentials[role];
        if (credentials && credentials.username === username && credentials.password === password) {
            this.currentUser = { ...credentials, role };
            this.showMainApp();

            const welcomeMsg = this.language === 'odia' 
                ? `‡¨∏‡≠ç‡≠±‡¨æ‡¨ó‡¨§‡¨Æ‡≠ç ${credentials.name}!` 
                : `Welcome back, ${credentials.nameEn}!`;
            this.showNotification(welcomeMsg, 'success');
        } else {
            this.showNotification(
                'Invalid credentials. Please use demo credentials. / ‡¨≠‡≠Å‡¨≤ ‡¨§‡¨•‡≠ç‡≠ü‡•§ ‡¨°‡≠á‡¨Æ‡≠ã ‡¨§‡¨•‡≠ç‡≠ü ‡¨¨‡≠ç‡≠ü‡¨¨‡¨π‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§', 
                'error'
            );
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    }

    quickLogin(role) {
        const roleSelect = document.getElementById('userRole');
        const usernameField = document.getElementById('username');
        const passwordField = document.getElementById('password');

        roleSelect.value = role;
        usernameField.value = this.credentials[role].username;
        passwordField.value = this.credentials[role].password;

        document.getElementById('loginForm').dispatchEvent(new Event('submit'));
    }

    showMainApp() {
        document.getElementById('loginPage').classList.add('hidden');
        document.getElementById('mainApp').classList.remove('hidden');
        this.updateHeader();
        this.loadNavigation();
        this.loadDashboard();
    }

    updateHeader() {
        const headerUserName = document.getElementById('headerUserName');
        const headerUserAvatar = document.getElementById('headerUserAvatar');

        if (headerUserName) {
            const displayName = this.language === 'odia' 
                ? this.currentUser.name 
                : this.currentUser.nameEn;
            headerUserName.textContent = displayName;
        }

        if (headerUserAvatar) {
            headerUserAvatar.textContent = this.currentUser.profilePicture;
        }

        const userRoleElement = document.querySelector('.user-role');
        if (userRoleElement) {
            const roleText = this.language === 'odia' 
                ? this.currentUser.roleOdia 
                : this.currentUser.role;
            userRoleElement.textContent = roleText;
        }
    }

    loadNavigation() {
        const navigationConfig = {
            student: [
                { icon: "üè†", label: "Dashboard", labelOdia: "‡¨Æ‡≠Å‡¨ñ‡≠ç‡≠ü ‡¨™‡≠É‡¨∑‡≠ç‡¨†‡¨æ", key: "dashboard" },
                { icon: "üë§", label: "My Profile", labelOdia: "‡¨Æ‡≠ã ‡¨™‡≠ç‡¨∞‡≠ã‡¨´‡¨æ‡¨á‡¨≤", key: "profile" },
                { icon: "üìö", label: "Academic Records", labelOdia: "‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨æ‡¨ó‡¨§ ‡¨∞‡≠á‡¨ï‡¨∞‡≠ç‡¨°", key: "academics" },
                { icon: "üìÖ", label: "Attendance", labelOdia: "‡¨â‡¨™‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø", key: "attendance" },
                { icon: "üìä", label: "Results", labelOdia: "‡¨´‡¨≥‡¨æ‡¨´‡¨≥", key: "results" }
            ],
            teacher: [
                { icon: "üè†", label: "Dashboard", labelOdia: "‡¨Æ‡≠Å‡¨ñ‡≠ç‡≠ü ‡¨™‡≠É‡¨∑‡≠ç‡¨†‡¨æ", key: "dashboard" },
                { icon: "üë•", label: "My Classes", labelOdia: "‡¨Æ‡≠ã ‡¨ï‡≠ç‡¨≤‡¨æ‡¨∏", key: "classes" },
                { icon: "‚úÖ", label: "Attendance", labelOdia: "‡¨â‡¨™‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø", key: "attendance" },
                { icon: "üìù", label: "Gradebook", labelOdia: "‡¨Æ‡¨æ‡¨∞‡≠ç‡¨ï ‡¨™‡≠Å‡¨∏‡≠ç‡¨§‡¨ï", key: "gradebook" },
                { icon: "üìä", label: "Reports", labelOdia: "‡¨∞‡¨ø‡¨™‡≠ã‡¨∞‡≠ç‡¨ü", key: "reports" }
            ],
            headmaster: [
                { icon: "üè†", label: "Dashboard", labelOdia: "‡¨Æ‡≠Å‡¨ñ‡≠ç‡≠ü ‡¨™‡≠É‡¨∑‡≠ç‡¨†‡¨æ", key: "dashboard" },
                { icon: "üè´", label: "School Overview", labelOdia: "‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨∏‡¨Æ‡≠Ä‡¨ï‡≠ç‡¨∑‡¨æ", key: "school" },
                { icon: "üë•", label: "Staff Management", labelOdia: "‡¨ï‡¨∞‡≠ç‡¨Æ‡¨ö‡¨æ‡¨∞‡≠Ä ‡¨™‡¨∞‡¨ø‡¨ö‡¨æ‡¨≥‡¨®‡¨æ", key: "staff" },
                { icon: "üë®‚Äçüéì", label: "Students", labelOdia: "‡¨õ‡¨æ‡¨§‡≠ç‡¨∞‡¨õ‡¨æ‡¨§‡≠ç‡¨∞‡≠Ä", key: "students" },
                { icon: "üìä", label: "Analytics", labelOdia: "‡¨¨‡¨ø‡¨∂‡≠ç‡¨≥‡≠á‡¨∑‡¨£", key: "analytics" }
            ],
            district_officer: [
                { icon: "üè†", label: "Dashboard", labelOdia: "‡¨Æ‡≠Å‡¨ñ‡≠ç‡≠ü ‡¨™‡≠É‡¨∑‡≠ç‡¨†‡¨æ", key: "dashboard" },
                { icon: "üèõÔ∏è", label: "District Overview", labelOdia: "‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ ‡¨∏‡¨Æ‡≠Ä‡¨ï‡≠ç‡¨∑‡¨æ", key: "district" },
                { icon: "üè´", label: "Schools (156+)", labelOdia: "‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü (156+)", key: "schools" },
                { icon: "üìä", label: "Analytics", labelOdia: "‡¨¨‡¨ø‡¨∂‡≠ç‡¨≥‡≠á‡¨∑‡¨£", key: "analytics" },
                { icon: "üí∞", label: "Budget", labelOdia: "‡¨¨‡¨ú‡≠á‡¨ü", key: "budget" }
            ]
        };

        const nav = navigationConfig[this.currentUser.role] || navigationConfig.student;
        const navContainer = document.getElementById('sidebarNav');

        if (navContainer) {
            navContainer.innerHTML = nav.map(item => {
                const label = this.language === 'odia' ? item.labelOdia : item.label;
                const activeClass = item.key === this.currentModule ? 'active' : '';
                return `
                    <a href="#" class="sap-nav-item ${activeClass}" onclick="app.loadModule('${item.key}')">
                        <span class="sap-nav-icon">${item.icon}</span>
                        <span>${label}</span>
                    </a>
                `;
            }).join('');
        }
    }

    loadModule(moduleKey) {
        this.currentModule = moduleKey;
        this.loadNavigation();

        const pageTitle = document.getElementById('pageTitle');
        const pageSubtitle = document.getElementById('pageSubtitle');
        const currentPageBreadcrumb = document.getElementById('currentPage');

        switch(moduleKey) {
            case 'dashboard':
                this.loadDashboard();
                break;
            case 'schools':
                const schoolsTitle = this.language === 'odia' ? '‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨™‡¨∞‡¨ø‡¨ö‡¨æ‡¨≥‡¨®‡¨æ' : 'Schools Management';
                const schoolsSubtitle = this.language === 'odia' 
                    ? '156+ ‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨ì 8 ‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ‡¨∞‡≠á' 
                    : '156+ schools across 8 districts';
                pageTitle.textContent = schoolsTitle;
                pageSubtitle.textContent = schoolsSubtitle;
                currentPageBreadcrumb.textContent = schoolsTitle;
                this.loadSchoolsData();
                break;
            case 'students':
                const studentsTitle = this.language === 'odia' ? '‡¨õ‡¨æ‡¨§‡≠ç‡¨∞ ‡¨∞‡≠á‡¨ï‡¨∞‡≠ç‡¨°' : 'Student Records';
                const studentsSubtitle = this.language === 'odia' 
                    ? '5,000+ ‡¨õ‡¨æ‡¨§‡≠ç‡¨∞ ‡¨™‡≠ç‡¨∞‡≠ã‡¨´‡¨æ‡¨á‡¨≤'
                    : '5,000+ student profiles';
                pageTitle.textContent = studentsTitle;
                pageSubtitle.textContent = studentsSubtitle;
                currentPageBreadcrumb.textContent = studentsTitle;
                this.loadStudentsData();
                break;
            default:
                const defaultTitle = moduleKey.charAt(0).toUpperCase() + moduleKey.slice(1);
                pageTitle.textContent = defaultTitle;
                pageSubtitle.textContent = `${defaultTitle} management module`;
                currentPageBreadcrumb.textContent = defaultTitle;
                this.loadDefaultContent(moduleKey);
        }
    }

    loadDashboard() {
        const pageTitle = document.getElementById('pageTitle');
        const pageSubtitle = document.getElementById('pageSubtitle');
        const contentContainer = document.getElementById('contentContainer');
        const currentPageBreadcrumb = document.getElementById('currentPage');

        const dashboardTitle = this.language === 'odia' ? '‡¨∞‡¨ø‡¨Ö‡¨≤-‡¨ü‡¨æ‡¨á‡¨Æ ‡¨°‡≠ç‡≠ü‡¨æ‡¨∏‡¨¨‡≠ã‡¨∞‡≠ç‡¨°' : 'Real-Time Dashboard';
        const welcomeText = this.language === 'odia' 
            ? `‡¨∏‡≠ç‡≠±‡¨æ‡¨ó‡¨§‡¨Æ‡≠ç, ${this.currentUser.name}` 
            : `Welcome back, ${this.currentUser.nameEn}`;

        pageTitle.textContent = dashboardTitle;
        pageSubtitle.textContent = welcomeText;
        currentPageBreadcrumb.textContent = dashboardTitle;

        const kpiData = this.getKPIData();
        const dashboardHTML = this.generateDashboardHTML(kpiData);
        contentContainer.innerHTML = dashboardHTML;
    }

    generateDashboardHTML(kpiData) {
        const isOdia = this.language === 'odia';

        let kpiCards = '';
        kpiData.forEach(kpi => {
            kpiCards += `
                <div class="kpi-card">
                    <div class="kpi-icon">${kpi.icon}</div>
                    <div class="kpi-content">
                        <h3 class="kpi-value">${kpi.value}</h3>
                        <p class="kpi-label">${isOdia ? kpi.labelOdia : kpi.label}</p>
                        <span class="kpi-trend ${kpi.trend}">${kpi.change}</span>
                    </div>
                </div>
            `;
        });

        const recentActivities = this.getRecentActivities();
        let activitiesList = '';
        recentActivities.forEach(activity => {
            activitiesList += `
                <div class="activity-item">
                    <div class="activity-icon">${activity.icon}</div>
                    <div class="activity-content">
                        <p class="activity-text">${isOdia ? activity.textOdia : activity.text}</p>
                        <small class="activity-time">${activity.time}</small>
                    </div>
                </div>
            `;
        });

        return `
            <div class="dashboard-grid" style="display: grid; grid-template-columns: 2fr 1fr; gap: 2rem; margin-bottom: 2rem;">
                <div class="kpi-section">
                    <h2 style="color: var(--odisha-text-dark); margin-bottom: 1.5rem; font-size: 1.3rem; border-bottom: 2px solid var(--odisha-saffron); padding-bottom: 0.5rem;">
                        ${isOdia ? '‡¨Æ‡≠Å‡¨ñ‡≠ç‡≠ü ‡¨™‡¨∞‡¨ø‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ‡¨®' : 'Key Performance Indicators'}
                    </h2>
                    <div class="kpi-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
                        ${kpiCards}
                    </div>
                </div>

                <div class="activities-section">
                    <h2 style="color: var(--odisha-text-dark); margin-bottom: 1.5rem; font-size: 1.3rem; border-bottom: 2px solid var(--odisha-saffron); padding-bottom: 0.5rem;">
                        ${isOdia ? '‡¨∏‡¨Æ‡≠ç‡¨™‡≠ç‡¨∞‡¨§‡¨ø ‡¨ï‡¨æ‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨ï‡¨≥‡¨æ‡¨™' : 'Recent Activities'}
                    </h2>
                    <div class="activities-list" style="max-height: 400px; overflow-y: auto;">
                        ${activitiesList}
                    </div>
                </div>
            </div>

            <div class="system-info-section">
                <h2 style="color: var(--odisha-text-dark); margin-bottom: 1.5rem; font-size: 1.3rem; border-bottom: 2px solid var(--odisha-saffron); padding-bottom: 0.5rem;">
                    ${isOdia ? '‡¨∏‡¨ø‡¨∑‡≠ç‡¨ü‡¨Æ ‡¨§‡¨•‡≠ç‡≠ü' : 'System Information'}
                </h2>
                <div class="system-stats" style="display: grid; gap: 1rem;">
                    <div class="stat-item" style="display: flex; align-items: center; gap: 0.5rem; padding: 1rem; background: rgba(255, 140, 0, 0.05); border-radius: 0.5rem; border: 1px solid rgba(255, 140, 0, 0.2);">
                        <span class="stat-icon" style="font-size: 1.2rem;">üè´</span>
                        <span class="stat-text" style="font-size: 0.9rem; color: var(--odisha-text-dark);">
                            ${isOdia ? '‡¨∏‡¨Ç‡¨Ø‡≠Å‡¨ï‡≠ç‡¨§ ‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü' : 'Connected Schools'}: <strong>${this.systemStatus.schools}</strong>
                        </span>
                    </div>
                    <div class="stat-item" style="display: flex; align-items: center; gap: 0.5rem; padding: 1rem; background: rgba(255, 140, 0, 0.05); border-radius: 0.5rem; border: 1px solid rgba(255, 140, 0, 0.2);">
                        <span class="stat-icon" style="font-size: 1.2rem;">üë®‚Äçüéì</span>
                        <span class="stat-text" style="font-size: 0.9rem; color: var(--odisha-text-dark);">
                            ${isOdia ? '‡¨∏‡¨ï‡≠ç‡¨∞‡¨ø‡≠ü ‡¨õ‡¨æ‡¨§‡≠ç‡¨∞' : 'Active Students'}: <strong>${this.systemStatus.students.toLocaleString()}</strong>
                        </span>
                    </div>
                    <div class="stat-item" style="display: flex; align-items: center; gap: 0.5rem; padding: 1rem; background: rgba(255, 140, 0, 0.05); border-radius: 0.5rem; border: 1px solid rgba(255, 140, 0, 0.2);">
                        <span class="stat-icon" style="font-size: 1.2rem;">üë©‚Äçüè´</span>
                        <span class="stat-text" style="font-size: 0.9rem; color: var(--odisha-text-dark);">
                            ${isOdia ? '‡¨Ö‡¨®‡¨≤‡¨æ‡¨á‡¨® ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï' : 'Online Teachers'}: <strong>${this.systemStatus.teachers}</strong>
                        </span>
                    </div>
                    <div class="stat-item" style="display: flex; align-items: center; gap: 0.5rem; padding: 1rem; background: rgba(255, 140, 0, 0.05); border-radius: 0.5rem; border: 1px solid rgba(255, 140, 0, 0.2);">
                        <span class="stat-icon" style="font-size: 1.2rem;">üîÑ</span>
                        <span class="stat-text" style="font-size: 0.9rem; color: var(--odisha-text-dark);">
                            ${isOdia ? '‡¨∂‡≠á‡¨∑ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü' : 'Last Sync'}: <strong>Live</strong>
                        </span>
                    </div>
                </div>
            </div>

            <style>
                .kpi-card {
                    background: linear-gradient(135deg, var(--odisha-lotus-white), white);
                    border: 2px solid var(--odisha-border);
                    border-radius: 0.5rem;
                    padding: 1.5rem;
                    display: flex;
                    align-items: center;
                    gap: 1rem;
                    transition: all 0.3s ease;
                    position: relative;
                    overflow: hidden;
                }

                .kpi-card::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    height: 4px;
                    width: 100%;
                    background: linear-gradient(90deg, var(--odisha-saffron), var(--odisha-sun-yellow));
                }

                .kpi-card:hover {
                    transform: translateY(-3px);
                    box-shadow: var(--odisha-shadow);
                    border-color: var(--odisha-saffron);
                }

                .kpi-icon {
                    font-size: 2.5rem;
                    margin-bottom: 0.5rem;
                }

                .kpi-value {
                    font-size: 1.8rem;
                    font-weight: 700;
                    color: var(--odisha-text-dark);
                    margin-bottom: 0.25rem;
                }

                .kpi-label {
                    color: var(--odisha-text-muted);
                    font-size: 0.9rem;
                    margin-bottom: 0.25rem;
                }

                .kpi-trend.positive {
                    color: var(--odisha-forest-green);
                }

                .activity-item {
                    display: flex;
                    align-items: flex-start;
                    gap: 1rem;
                    padding: 1rem;
                    border-bottom: 1px solid var(--odisha-border);
                    transition: background 0.2s ease;
                }

                .activity-item:hover {
                    background: rgba(255, 140, 0, 0.05);
                }

                .activity-icon {
                    font-size: 1.2rem;
                    margin-top: 2px;
                }

                .activity-text {
                    font-size: 0.9rem;
                    color: var(--odisha-text-dark);
                    margin-bottom: 0.25rem;
                }

                .activity-time {
                    color: var(--odisha-text-muted);
                    font-size: 0.75rem;
                }

                @media (max-width: 1024px) {
                    .dashboard-grid {
                        grid-template-columns: 1fr !important;
                    }

                    .kpi-grid {
                        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)) !important;
                    }
                }
            </style>
        `;
    }

    getKPIData() {
        const role = this.currentUser.role;

        const kpiConfigs = {
            student: [
                { icon: 'üìä', label: 'Overall Grade', labelOdia: '‡¨∏‡¨æ‡¨Æ‡¨ó‡≠ç‡¨∞‡¨ø‡¨ï ‡¨ó‡≠ç‡¨∞‡≠á‡¨°‡≠ç', value: 'A+', change: '‚Üë 5%', trend: 'positive' },
                { icon: 'üìÖ', label: 'Attendance', labelOdia: '‡¨â‡¨™‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø', value: '94%', change: '‚Üë 2%', trend: 'positive' },
                { icon: 'üìö', label: 'Subjects', labelOdia: '‡¨¨‡¨ø‡¨∑‡≠ü', value: '8', change: 'Active', trend: 'neutral' },
                { icon: 'üèÜ', label: 'Rank', labelOdia: '‡¨∏‡≠ç‡¨•‡¨æ‡¨®', value: '#12', change: '‚Üë 3', trend: 'positive' }
            ],
            teacher: [
                { icon: 'üë•', label: 'Classes', labelOdia: '‡¨ï‡≠ç‡¨≤‡¨æ‡¨∏‡≠ç', value: '5', change: 'Active', trend: 'neutral' },
                { icon: 'üë®‚Äçüéì', label: 'Students', labelOdia: '‡¨õ‡¨æ‡¨§‡≠ç‡¨∞', value: '145', change: '‚Üë 8', trend: 'positive' },
                { icon: 'üìä', label: 'Avg. Performance', labelOdia: '‡¨π‡¨æ‡¨∞‡¨æ‡¨π‡¨æ‡¨∞‡¨ø ‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨®', value: '87%', change: '‚Üë 3%', trend: 'positive' },
                { icon: 'üìù', label: 'Assignments', labelOdia: '‡¨ó‡≠É‡¨π‡¨ï‡¨æ‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü', value: '23', change: 'Pending', trend: 'neutral' }
            ],
            headmaster: [
                { icon: 'üè´', label: 'Total Students', labelOdia: '‡¨Æ‡≠ã‡¨ü ‡¨õ‡¨æ‡¨§‡≠ç‡¨∞', value: '245', change: '‚Üë 12', trend: 'positive' },
                { icon: 'üë©‚Äçüè´', label: 'Teachers', labelOdia: '‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï', value: '18', change: 'Active', trend: 'neutral' },
                { icon: 'üìä', label: 'School Performance', labelOdia: '‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨®', value: '91%', change: '‚Üë 5%', trend: 'positive' },
                { icon: 'üí∞', label: 'Budget Utilization', labelOdia: '‡¨¨‡¨ú‡≠á‡¨ü ‡¨¨‡≠ç‡≠ü‡¨¨‡¨π‡¨æ‡¨∞', value: '78%', change: 'On track', trend: 'positive' }
            ],
            district_officer: [
                { icon: 'üè´', label: 'Schools', labelOdia: '‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü', value: '156', change: '‚Üë 3', trend: 'positive' },
                { icon: 'üë®‚Äçüéì', label: 'Students', labelOdia: '‡¨õ‡¨æ‡¨§‡≠ç‡¨∞', value: '5,247', change: '‚Üë 127', trend: 'positive' },
                { icon: 'üë©‚Äçüè´', label: 'Teachers', labelOdia: '‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï', value: '342', change: '‚Üë 8', trend: 'positive' },
                { icon: 'üìä', label: 'District Performance', labelOdia: '‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ ‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨®', value: '88%', change: '‚Üë 4%', trend: 'positive' }
            ]
        };

        return kpiConfigs[role] || kpiConfigs.student;
    }

    getRecentActivities() {
        const role = this.currentUser.role;

        const activityConfigs = {
            student: [
                { icon: 'üìù', text: 'Mathematics assignment submitted', textOdia: '‡¨ó‡¨£‡¨ø‡¨§ ‡¨ó‡≠É‡¨π‡¨ï‡¨æ‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü ‡¨¶‡¨æ‡¨ñ‡¨≤', time: '2 hours ago' },
                { icon: 'üìä', text: 'Science test results published', textOdia: '‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨™‡¨∞‡≠Ä‡¨ï‡≠ç‡¨∑‡¨æ ‡¨´‡¨≥‡¨æ‡¨´‡¨≥', time: '1 day ago' },
                { icon: 'üìÖ', text: 'Attendance marked for today', textOdia: '‡¨Ü‡¨ú‡¨ø‡¨∞ ‡¨â‡¨™‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Æ‡¨æ‡¨∞‡≠ç‡¨ï', time: '3 hours ago' },
                { icon: 'üìö', text: 'New study material uploaded', textOdia: '‡¨®‡≠Ç‡¨§‡¨® ‡¨Ö‡¨ß‡≠ç‡≠ü‡≠ü‡¨® ‡¨∏‡¨æ‡¨Æ‡¨ó‡≠ç‡¨∞‡≠Ä', time: '2 days ago' }
            ],
            teacher: [
                { icon: 'üë•', text: 'Class 10A attendance updated', textOdia: '‡¨ï‡≠ç‡¨≤‡¨æ‡¨∏ 10A ‡¨â‡¨™‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü', time: '1 hour ago' },
                { icon: 'üìù', text: 'Graded 25 assignments', textOdia: '25‡¨ü‡¨ø ‡¨ó‡≠É‡¨π‡¨ï‡¨æ‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü‡¨æ‡¨ô‡≠ç‡¨ï‡¨®', time: '3 hours ago' },
                { icon: 'üìä', text: 'Monthly report generated', textOdia: '‡¨Æ‡¨æ‡¨∏‡¨ø‡¨ï ‡¨∞‡¨ø‡¨™‡≠ã‡¨∞‡≠ç‡¨ü ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§', time: '1 day ago' },
                { icon: 'üéì', text: 'Parent meeting scheduled', textOdia: '‡¨Ö‡¨≠‡¨ø‡¨≠‡¨æ‡¨¨‡¨ï ‡¨∏‡¨≠‡¨æ ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨ø‡¨§', time: '2 days ago' }
            ],
            headmaster: [
                { icon: 'üè´', text: 'School inspection completed', textOdia: '‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£', time: '2 hours ago' },
                { icon: 'üë©‚Äçüè´', text: 'New teacher orientation', textOdia: '‡¨®‡≠Ç‡¨§‡¨® ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï ‡¨Ö‡¨≠‡¨ø‡¨Æ‡≠Å‡¨ñ‡≠Ä‡¨ï‡¨∞‡¨£', time: '1 day ago' },
                { icon: 'üí∞', text: 'Budget allocation approved', textOdia: '‡¨¨‡¨ú‡≠á‡¨ü ‡¨¨‡¨£‡≠ç‡¨ü‡¨® ‡¨Ö‡¨®‡≠Å‡¨Æ‡≠ã‡¨¶‡¨ø‡¨§', time: '3 days ago' },
                { icon: 'üìä', text: 'Performance review meeting', textOdia: '‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨® ‡¨∏‡¨Æ‡≠Ä‡¨ï‡≠ç‡¨∑‡¨æ ‡¨∏‡¨≠‡¨æ', time: '1 week ago' }
            ],
            district_officer: [
                { icon: 'üèõÔ∏è', text: 'District meeting concluded', textOdia: '‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ ‡¨∏‡¨≠‡¨æ ‡¨∏‡¨Æ‡¨æ‡¨™‡≠ç‡¨§', time: '1 hour ago' },
                { icon: 'üè´', text: '3 new schools approved', textOdia: '3‡¨ü‡¨ø ‡¨®‡≠Ç‡¨§‡¨® ‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨Ö‡¨®‡≠Å‡¨Æ‡≠ã‡¨¶‡¨ø‡¨§', time: '2 days ago' },
                { icon: 'üìä', text: 'Monthly district report', textOdia: '‡¨Æ‡¨æ‡¨∏‡¨ø‡¨ï ‡¨ú‡¨ø‡¨≤‡≠ç‡¨≤‡¨æ ‡¨∞‡¨ø‡¨™‡≠ã‡¨∞‡≠ç‡¨ü', time: '3 days ago' },
                { icon: 'üí∞', text: 'Fund allocation reviewed', textOdia: '‡¨™‡¨æ‡¨£‡≠ç‡¨†‡¨ø ‡¨¨‡¨£‡≠ç‡¨ü‡¨® ‡¨∏‡¨Æ‡≠Ä‡¨ï‡≠ç‡¨∑‡¨æ', time: '1 week ago' }
            ]
        };

        return activityConfigs[role] || activityConfigs.student;
    }

    toggleLanguage(e) {
        const clickedBtn = e.target;
        const langBtns = document.querySelectorAll('.lang-btn');

        langBtns.forEach(btn => btn.classList.remove('active'));
        clickedBtn.classList.add('active');

        this.language = clickedBtn.textContent === '‡¨ì‡¨°‡¨º‡¨ø‡¨Ü' ? 'odia' : 'english';

        this.updateHeader();
        this.loadNavigation();
        this.loadModule(this.currentModule);
    }

    updateRealTimeStats() {
        const activeUsersElement = document.getElementById('activeUsers');
        const lastSyncElement = document.getElementById('lastSync');

        if (activeUsersElement) {
            setInterval(() => {
                const variance = Math.floor(Math.random() * 20) - 10;
                this.systemStatus.activeUsers += variance;
                if (this.systemStatus.activeUsers < 1200) this.systemStatus.activeUsers = 1200;
                if (this.systemStatus.activeUsers > 1500) this.systemStatus.activeUsers = 1500;
                activeUsersElement.textContent = this.systemStatus.activeUsers.toLocaleString();
            }, 5000);
        }

        if (lastSyncElement) {
            setInterval(() => {
                lastSyncElement.textContent = 'Live';
            }, 3000);
        }
    }

    startRealTimeSync() {
        if (this.syncInterval) clearInterval(this.syncInterval);

        this.syncInterval = setInterval(() => {
            console.log('Syncing data...', new Date().toLocaleTimeString());
        }, 30000);
    }

    showNotification(message, type = 'info') {
        const container = document.getElementById('notificationContainer');
        if (!container) return;

        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <span>${message}</span>
                <button onclick="this.parentElement.parentElement.remove()" 
                        style="background: none; border: none; font-size: 1.2rem; cursor: pointer; padding: 0; margin-left: 1rem;">√ó</button>
            </div>
        `;

        container.appendChild(notification);

        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 5000);
    }

    loadSchoolsData() {
        const contentContainer = document.getElementById('contentContainer');
        contentContainer.innerHTML = `
            <div class="module-placeholder" style="text-align: center; padding: 3rem; color: var(--odisha-text-muted);">
                <div class="placeholder-icon" style="font-size: 4rem; margin-bottom: 1.5rem;">üè´</div>
                <h3 style="margin-bottom: 1rem; color: var(--odisha-text-dark);">
                    ${this.language === 'odia' ? '‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ‡¨≥‡≠ü ‡¨Æ‡¨°‡≠ç‡≠ü‡≠Å‡¨≤' : 'Schools Module'}
                </h3>
                <p>${this.language === 'odia' 
                    ? '‡¨è‡¨π‡¨ø ‡¨¨‡¨ø‡¨≠‡¨æ‡¨ó ‡¨∂‡≠Ä‡¨ò‡≠ç‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨π‡≠á‡¨¨‡•§' 
                    : 'This section will be completed soon.'}</p>
            </div>
        `;
    }

    loadStudentsData() {
        const contentContainer = document.getElementById('contentContainer');
        contentContainer.innerHTML = `
            <div class="module-placeholder" style="text-align: center; padding: 3rem; color: var(--odisha-text-muted);">
                <div class="placeholder-icon" style="font-size: 4rem; margin-bottom: 1.5rem;">üë®‚Äçüéì</div>
                <h3 style="margin-bottom: 1rem; color: var(--odisha-text-dark);">
                    ${this.language === 'odia' ? '‡¨õ‡¨æ‡¨§‡≠ç‡¨∞ ‡¨Æ‡¨°‡≠ç‡≠ü‡≠Å‡¨≤' : 'Students Module'}
                </h3>
                <p>${this.language === 'odia' 
                    ? '‡¨è‡¨π‡¨ø ‡¨¨‡¨ø‡¨≠‡¨æ‡¨ó ‡¨∂‡≠Ä‡¨ò‡≠ç‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨π‡≠á‡¨¨‡•§' 
                    : 'This section will be completed soon.'}</p>
            </div>
        `;
    }

    loadDefaultContent(moduleKey) {
        const contentContainer = document.getElementById('contentContainer');

        contentContainer.innerHTML = `
            <div class="module-placeholder" style="text-align: center; padding: 3rem; color: var(--odisha-text-muted);">
                <div class="placeholder-icon" style="font-size: 4rem; margin-bottom: 1.5rem;">üöß</div>
                <h3 style="margin-bottom: 1rem; color: var(--odisha-text-dark);">
                    ${this.language === 'odia' ? `${moduleKey} ‡¨Æ‡¨°‡≠ç‡≠ü‡≠Å‡¨≤` : `${moduleKey.charAt(0).toUpperCase() + moduleKey.slice(1)} Module`}
                </h3>
                <p>${this.language === 'odia' 
                    ? '‡¨è‡¨π‡¨ø ‡¨¨‡¨ø‡¨≠‡¨æ‡¨ó ‡¨∂‡≠Ä‡¨ò‡≠ç‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨π‡≠á‡¨¨‡•§'
                    : 'This section will be completed soon.'}</p>
            </div>
        `;
    }

    // Sample data generation methods
    generateStudentData() {
        return {
            academicYear: '2024-25',
            class: 'X',
            section: 'A',
            rollNumber: '2024001',
            subjects: ['Odia', 'English', 'Mathematics', 'Science', 'Social Science'],
            attendance: 94.5,
            grades: { 'Mathematics': 'A+', 'Science': 'A', 'English': 'B+' }
        };
    }

    generateParentData() {
        return {
            children: [
                { name: 'Ravi Kumar Patel', class: 'X', school: 'Govt. High School, Cuttack' }
            ],
            meetingsScheduled: 2,
            feesStatus: 'Paid'
        };
    }

    generateTeacherData() {
        return {
            subjects: ['Mathematics', 'Science'],
            classes: ['IX-A', 'IX-B', 'X-A', 'X-B', 'X-C'],
            totalStudents: 145,
            experience: '15 years',
            qualification: 'M.Sc., B.Ed.'
        };
    }

    generateHeadmasterData() {
        return {
            schoolName: 'Government Model School, Puri',
            totalStudents: 245,
            totalTeachers: 18,
            infrastructure: 'Excellent',
            performanceRating: 'A+'
        };
    }

    generateBlockOfficerData() {
        return {
            blockName: 'Khordha Block',
            totalSchools: 23,
            totalStudents: 1247,
            totalTeachers: 89,
            inspectionsCompleted: 18
        };
    }

    generateDistrictOfficerData() {
        return {
            districtName: 'Khordha District',
            totalBlocks: 8,
            totalSchools: 156,
            totalStudents: 5247,
            totalTeachers: 342,
            budgetAllocated: '‚Çπ2.5 Crores'
        };
    }
}

// Initialize the application
const app = new OdishaEducationPortal();

// Make it globally accessible for HTML onclick handlers
window.app = app;
